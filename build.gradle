group 'com.fkistner'

buildscript {
    ext.kotlin_version = '1.1.3-2'

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/netsflaunch4j-1006/" }
        maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local/" }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.15"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        //classpath "gradle.plugin.edu.sc.seis:macAppBundle:2.1.7-SNAPSHOT"
        classpath 'com.github.crotwell:gradle-macappbundle:master-SNAPSHOT'
        classpath 'com.vdurmont:semver4j:2.0.2'
        classpath 'edu.sc.seis.gradle:launch4j:2.4.0-3-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'antlr'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'edu.sc.seis.macAppBundle'
apply plugin: 'edu.sc.seis.launch4j'

ext {
    revision     =  'git rev-parse HEAD'.execute().text.trim()
    parent       =  'git describe --tags --abbrev=0'.execute().text.trim()
    commits      = ('git rev-list --count '+parent+'..HEAD').execute().text.trim()
    totalCommits = ('git rev-list --count HEAD').execute().text.trim()

    semver = new com.vdurmont.semver4j.Semver(parent)
    if (commits == '0') {
        version = parent
    } else {
        if (semver.getSuffixTokens().length == 0) { 
            semver  = semver.nextPatch()
            version = semver.getValue() + '-pre.' 
        } else version = parent + '.'
        version += ('git rev-list --count '+parent+'..HEAD').execute().text.trim() + '+g' + 'git rev-parse --short=4 HEAD'.execute().text.trim()
    }
}


applicationName = 'South Quay'
description = 'South Quay - Interactive Editor and Interpreter'
mainClassName = 'com.fkistner.SouthQuay.EntrypointKt'
version ext.version


sourceCompatibility = 1.8

repositories {
    jcenter()
}

// Work around https://github.com/gradle/gradle/issues/820
configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

dependencies {
    antlr "org.antlr:antlr4:4.7"
    compile "org.antlr:antlr4-runtime:4.7"
    compile "com.fifesoft:rsyntaxtextarea:2.6.1"
    compile "com.fifesoft:autocomplete:2.6.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    testCompile 'junit:junit:4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = project.sourceCompatibility
}
compileTestKotlin {
    kotlinOptions.jvmTarget = project.sourceCompatibility
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-no-listener", "-long-messages"]
}
compileKotlin.dependsOn generateGrammarSource


dokka {
    outputFormat = 'html' 
    outputDirectory = javadoc.destinationDir
    reportNotDocumented = true
    jdkVersion = 8

    linkMapping {
        dir = "src"
        url = "https://github.com/fkistner/SouthQuay/blob/" + revision + "/src"
        suffix = "#L"
    }
}

jar {
    manifest {
        attributes 'Application-Name': applicationName
    }
}

shadowJar {
    classifier = null
    destinationDir = distsDir
}

macAppBundle {
    appName = applicationName
    bundleIdentifier = group + '.' + name
    mainClassName = project.mainClassName
    runtimeConfigurationName = 'shadow'
    jarTask = 'shadowJar'
    dmgName = name + '-mac-' + version
}

createExe {
    productName = applicationName
    fileDescription = project.description
    version = semver.withClearedSuffix().getValue() + '.' + totalCommits
    textVersion = project.version
    mainClassName = project.mainClassName
    downloadUrl = 'https://www.java.com/download/'
    copyConfigurable = project.tasks.shadowJar.outputs.files
    jar = "lib/${project.tasks.shadowJar.archiveName}"
    outfile = project.name + '.exe'
}

task createExeZip(dependsOn: ['createExe'], type: Zip) {
    appendix = 'win'
    destinationDir file(distsDir)
    from createExe.dest
}


distTar.enabled = false
distZip.enabled = false
shadowDistTar.enabled = false
shadowDistZip.enabled = false
createDmg.enabled = false
assemble.dependsOn createAppZip
assemble.dependsOn createExeZip
